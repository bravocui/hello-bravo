steps:
  # Step 1: Build the Docker image
  # Uses the Cloud Build Docker builder to build your image.
  # The '--platform linux/amd64' is not explicitly needed in Cloud Build
  # as it typically builds for Linux by default, but can be added if required
  # for specific cross-platform build scenarios. For a direct translation,
  # it's omitted as Cloud Build's environment is Linux-based.
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '-t'
      - 'gcr.io/${PROJECT_ID}/hello-bravo-api' # Uses Cloud Build's PROJECT_ID substitution
      - '.' # Build context, typically the root of your source repository

  # Step 2: Push the Docker image to Artifact Registry (or Container Registry)
  # Cloud Build automatically has permissions to push to registries within the same project.
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - 'gcr.io/${PROJECT_ID}/hello-bravo-api'

  # Step 3: Deploy the image to Cloud Run
  # Uses the gcloud builder to run the Cloud Run deploy command.
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    args:
      - 'gcloud'
      - 'run'
      - 'deploy'
      - 'hello-bravo-api'
      - '--image'
      - 'gcr.io/${PROJECT_ID}/hello-bravo-api'
      - '--platform'
      - 'managed'
      - '--region'
      - 'us-central1'
      - '--allow-unauthenticated'
      - '--add-cloudsql-instances'
      - 'bravocui-site:us-central1:bravocuisite' # Ensure this Cloud SQL instance connection name is correct
    # The 'entrypoint' specifies the command to execute within the gcloud builder image.
    entrypoint: 'bash'
